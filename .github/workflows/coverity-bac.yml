# example workflow for traditional Coverity BAC with c-r-d PR scans
name: coverity-bac
on:
  push:
    branches: [main, master, develop, stage, release]
  pull_request:
    branches: [main, master, develop, stage, release]
  workflow_dispatch:
jobs:
  coverity:
    runs-on: self-hosted
    environment: COVERITY_URL
    permissions: write-all
    env:
      github-token: ${{ secrets.TOKEN }}
      COVERITY_URL: ${{ vars.COVERITY_URL }}
      COV_USER: ${{ secrets.COV_USER }}
      COVERITY_PASSPHRASE: ${{ secrets.COVERITY_PASSPHRASE }}
      COVERITY_PROJECT: ${{ github.event.repository.name }}
      COVERITY_TOOLKIT: /Applications/cov-analysis-macosx-2023.6.0
      COVERITY_CLI_CONNECT_PASSWORD: ${{ secrets.COVERITY_PASSPHRASE }}
      COVERITY_CLI_CONNECT_USERNAME: ${{ secrets.COV_USER }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: microsoft
          cache: maven
      - name: Coverity Full Scan
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COVERITY_STREAM: ${{ github.event.repository.name }}-${{ github.ref_name }}
        run: |
          export PATH=/usr/local/bin:$PATH:$COVERITY_TOOLKIT/bin
          rm -rf idir
          coverity scan --dir idir -o commit.connect.url="$COVERITY_URL" -o commit.connect.stream="$COVERITY_STREAM" 
          cov-format-errors --dir idir --json-output-v7 coverity-results.json
      - name: Coverity Quality Gate
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE $COVERITY_URL/api/viewContents/issues/v1/Outstanding%20Issues?projectId=$COVERITY_PROJECT > issues.json
          if [ $(cat issues.json | jq .viewContentsV1.totalRows) -ne 0 ]; then echo "Outstanding Issues Detected"; cat issues.json | jq .viewContentsV1.rows; exit 8; fi
      - name: Get PR Changeset
        id: changeset
        if: ${{ github.event_name == 'pull_request' }}
        uses: jitterbit/get-changed-files@v1
      - name: Coverity PR Scan
        if: ${{ github.event_name == 'pull_request' && steps.changeset.outputs.added_modified != '' }}
        env:
          COVERITY_STREAM: ${{ github.event.repository.name }}-${{ github.base_ref }}
        run: |
          export PATH=$PATH:$RUNNER_TEMP/$COVERITY_TOOLKIT/bin
          cov-run-desktop --dir idir --url $COVERITY_URL --stream $COVERITY_STREAM --build $BLDCMD
          cov-run-desktop --dir idir --url $COVERITY_URL --stream $COVERITY_STREAM --present-in-reference false \
            --ignore-uncapturable-inputs true --json-output-v7 coverity-results.json --exit1-if-defects true ${{ steps.changeset.outputs.added_modified }}

      - name: Convert Coverity Results to SARIF
        uses: gautambaghel/coverity-scan-results-to-sarif@1.0.0
        with:
          pipeline-results-json: coverity-results.json
          output-results-sarif: coverity-results.sarif

      - name: Upload SARIF file to GitHub UI
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: coverity-results.sarif


#      - name: Coverity Download
#        run: |
#          curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE $COVERITY_URL/downloadFile.htm?fn=$COVERITY_TOOLKIT.tar.gz | tar -C $RUNNER_TEMP -xzfv -
#          curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE -o $RUNNER_TEMP/$COVERITY_TOOLKIT/bin/license.dat $COVERITY_URL/downloadFile.htm?fn=license.dat


#    - name: Save Logs
#      if: always()
#      uses: actions/upload-artifact@v3
#      with:
#        name: coverity-logs
#        path: ${{ github.workspace }}/idir
# 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
